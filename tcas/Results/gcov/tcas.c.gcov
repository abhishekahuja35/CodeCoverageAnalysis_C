        -:    0:Source:tcas.c
        -:    0:Graph:tcas.gcno
        -:    0:Data:tcas.gcda
        -:    0:Runs:1608
        -:    1:
        -:    2:/*  -*- Last-Edit:  Wed Apr  7 17:14:13 1993 by Tarak S. Goradia; -*- */
        -:    3:/* $Log: tcas.c,v $
        -:    4: * Revision 1.2  1993/03/12  19:29:50  foster
        -:    5: * Correct logic bug which didn't allow output of 2 - hf
        -:    6: * */
        -:    7:
        -:    8:#include <stdio.h>
        -:    9:
        -:   10:#define OLEV       600		/* in feets/minute */
        -:   11:#define MAXALTDIFF 600		/* max altitude difference in feet */
        -:   12:#define MINSEP     300          /* min separation in feet */
        -:   13:#define NOZCROSS   100		/* in feet */
        -:   14:				/* variables */
        -:   15:
        -:   16:typedef int bool;
        -:   17:
        -:   18:int Cur_Vertical_Sep;
        -:   19:bool High_Confidence;
        -:   20:bool Two_of_Three_Reports_Valid;
        -:   21:
        -:   22:int Own_Tracked_Alt;
        -:   23:int Own_Tracked_Alt_Rate;
        -:   24:int Other_Tracked_Alt;
        -:   25:
        -:   26:int Alt_Layer_Value;		/* 0, 1, 2, 3 */
        -:   27:int Positive_RA_Alt_Thresh[4];
        -:   28:
        -:   29:int Up_Separation;
        -:   30:int Down_Separation;
        -:   31:
        -:   32:				/* state variables */
        -:   33:int Other_RAC;			/* NO_INTENT, DO_NOT_CLIMB, DO_NOT_DESCEND */
        -:   34:#define NO_INTENT 0
        -:   35:#define DO_NOT_CLIMB 1
        -:   36:#define DO_NOT_DESCEND 2
        -:   37:
        -:   38:int Other_Capability;		/* TCAS_TA, OTHER */
        -:   39:#define TCAS_TA 1
        -:   40:#define OTHER 2
        -:   41:
        -:   42:int Climb_Inhibit;		/* true/false */
        -:   43:
        -:   44:#define UNRESOLVED 0
        -:   45:#define UPWARD_RA 1
        -:   46:#define DOWNWARD_RA 2
        -:   47:
function initialize called 1578 returned 100% blocks executed 100%
     1578:   48:void initialize()
        -:   49:{
     1578:   50:    Positive_RA_Alt_Thresh[0] = 400;
     1578:   51:    Positive_RA_Alt_Thresh[1] = 500;
     1578:   52:    Positive_RA_Alt_Thresh[2] = 640;
     1578:   53:    Positive_RA_Alt_Thresh[3] = 740;
     1578:   54:}
        -:   55:
function ALIM called 1291 returned 100% blocks executed 100%
     1291:   56:int ALIM ()
        -:   57:{
     1291:   58: return Positive_RA_Alt_Thresh[Alt_Layer_Value];
        -:   59:}
        -:   60:
function Inhibit_Biased_Climb called 1772 returned 100% blocks executed 100%
     1772:   61:int Inhibit_Biased_Climb ()
        -:   62:{
     1772:   63:    return (Climb_Inhibit ? Up_Separation + NOZCROSS : Up_Separation);
branch  0 taken 61% (fallthrough)
branch  1 taken 39%
        -:   64:}
        -:   65:
function Non_Crossing_Biased_Climb called 886 returned 100% blocks executed 100%
      886:   66:bool Non_Crossing_Biased_Climb()
        -:   67:{
        -:   68:    int upward_preferred;
        -:   69:    int upward_crossing_situation;
        -:   70:    bool result;
        -:   71:
      886:   72:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
call    0 returned 100%
      886:   73:    if (upward_preferred)
branch  0 taken 54% (fallthrough)
branch  1 taken 46%
        -:   74:    {
      478:   75:	result = !(Own_Below_Threat()) || ((Own_Below_Threat()) && (!(Down_Separation >= ALIM())));
call    0 returned 100%
branch  1 taken 67% (fallthrough)
branch  2 taken 33%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
call    6 returned 100%
branch  7 taken 45% (fallthrough)
branch  8 taken 55%
        -:   76:    }
        -:   77:    else
        -:   78:    {	
      408:   79:	result = (Cur_Vertical_Sep >= MINSEP) && (Up_Separation >= ALIM());
branch  0 taken 100% (fallthrough)
branch  1 taken 0%
call    2 returned 100%
branch  3 taken 36% (fallthrough)
branch  4 taken 64%
        -:   80:    }
      886:   81:    return result;
        -:   82:}
        -:   83:
function Non_Crossing_Biased_Descend called 886 returned 100% blocks executed 100%
      886:   84:bool Non_Crossing_Biased_Descend()
        -:   85:{
        -:   86:    int upward_preferred;
        -:   87:    int upward_crossing_situation;
        -:   88:    bool result;
        -:   89:
      886:   90:    upward_preferred = Inhibit_Biased_Climb() > Down_Separation;
call    0 returned 100%
      886:   91:    if (upward_preferred)
branch  0 taken 54% (fallthrough)
branch  1 taken 46%
        -:   92:    {
      478:   93:	result = Own_Below_Threat() && (Cur_Vertical_Sep >= MINSEP) && (Down_Separation >= ALIM());
call    0 returned 100%
branch  1 taken 67% (fallthrough)
branch  2 taken 33%
branch  3 taken 100% (fallthrough)
branch  4 taken 0%
call    5 returned 100%
branch  6 taken 55% (fallthrough)
branch  7 taken 45%
        -:   94:    }
        -:   95:    else
        -:   96:    {
      408:   97:	result = !(Own_Above_Threat()) || ((Own_Above_Threat()) && (Up_Separation >= ALIM()));
call    0 returned 100%
branch  1 taken 60% (fallthrough)
branch  2 taken 40%
call    3 returned 100%
branch  4 taken 100% (fallthrough)
branch  5 taken 0%
call    6 returned 100%
branch  7 taken 50% (fallthrough)
branch  8 taken 50%
        -:   98:    }
      886:   99:    return result;
        -:  100:}
        -:  101:
function Own_Below_Threat called 1725 returned 100% blocks executed 100%
     1725:  102:bool Own_Below_Threat()
        -:  103:{
     1725:  104:    return (Own_Tracked_Alt < Other_Tracked_Alt);
        -:  105:}
        -:  106:
function Own_Above_Threat called 1113 returned 100% blocks executed 100%
     1113:  107:bool Own_Above_Threat()
        -:  108:{
     1113:  109:    return (Other_Tracked_Alt < Own_Tracked_Alt);
        -:  110:}
        -:  111:
function alt_sep_test called 1578 returned 100% blocks executed 97%
     1578:  112:int alt_sep_test()
        -:  113:{
        -:  114:    bool enabled, tcas_equipped, intent_not_known;
        -:  115:    bool need_upward_RA, need_downward_RA;
        -:  116:    int alt_sep;
        -:  117:
     1578:  118:    enabled = High_Confidence && (Own_Tracked_Alt_Rate <= OLEV) && (Cur_Vertical_Sep > MAXALTDIFF);
branch  0 taken 76% (fallthrough)
branch  1 taken 24%
branch  2 taken 94% (fallthrough)
branch  3 taken 6%
branch  4 taken 92% (fallthrough)
branch  5 taken 8%
     1578:  119:    tcas_equipped = Other_Capability == TCAS_TA;
     1578:  120:    intent_not_known = Two_of_Three_Reports_Valid && Other_RAC == NO_INTENT;
branch  0 taken 44% (fallthrough)
branch  1 taken 56%
branch  2 taken 63% (fallthrough)
branch  3 taken 37%
        -:  121:    
     1578:  122:    alt_sep = UNRESOLVED;
        -:  123:    
     1578:  124:    if (enabled && ((tcas_equipped && intent_not_known) || !tcas_equipped))
branch  0 taken 66% (fallthrough)
branch  1 taken 34%
branch  2 taken 29% (fallthrough)
branch  3 taken 71%
branch  4 taken 50% (fallthrough)
branch  5 taken 50%
branch  6 taken 83% (fallthrough)
branch  7 taken 17%
        -:  125:    {
      886:  126:	need_upward_RA = Non_Crossing_Biased_Climb() && Own_Below_Threat();
call    0 returned 100%
branch  1 taken 51% (fallthrough)
branch  2 taken 49%
call    3 returned 100%
branch  4 taken 37% (fallthrough)
branch  5 taken 63%
      886:  127:	need_downward_RA = Non_Crossing_Biased_Descend() && Own_Above_Threat();
call    0 returned 100%
branch  1 taken 52% (fallthrough)
branch  2 taken 48%
call    3 returned 100%
branch  4 taken 27% (fallthrough)
branch  5 taken 73%
      886:  128:	if (need_upward_RA && need_downward_RA)
branch  0 taken 19% (fallthrough)
branch  1 taken 81%
branch  2 taken 0% (fallthrough)
branch  3 taken 100%
        -:  129:        /* unreachable: requires Own_Below_Threat and Own_Above_Threat
        -:  130:           to both be true - that requires Own_Tracked_Alt < Other_Tracked_Alt
        -:  131:           and Other_Tracked_Alt < Own_Tracked_Alt, which isn't possible */
    #####:  132:	    alt_sep = UNRESOLVED;
      886:  133:	else if (need_upward_RA)
branch  0 taken 19% (fallthrough)
branch  1 taken 81%
      168:  134:	    alt_sep = UPWARD_RA;
      718:  135:	else if (need_downward_RA)
branch  0 taken 17% (fallthrough)
branch  1 taken 83%
      123:  136:	    alt_sep = DOWNWARD_RA;
        -:  137:	else
      595:  138:	    alt_sep = UNRESOLVED;
        -:  139:    }
        -:  140:    
     1578:  141:    return alt_sep;
        -:  142:}
        -:  143:
function main called 1608 returned 0% blocks executed 100%
     1608:  144:main(argc, argv)
        -:  145:int argc;
        -:  146:char *argv[];
        -:  147:{
     1608:  148:    if(argc < 13)
branch  0 taken 2% (fallthrough)
branch  1 taken 98%
        -:  149:    {
       30:  150:	fprintf(stdout, "Error: Command line arguments are\n");
call    0 returned 100%
       30:  151:	fprintf(stdout, "Cur_Vertical_Sep, High_Confidence, Two_of_Three_Reports_Valid\n");
call    0 returned 100%
       30:  152:	fprintf(stdout, "Own_Tracked_Alt, Own_Tracked_Alt_Rate, Other_Tracked_Alt\n");
call    0 returned 100%
       30:  153:	fprintf(stdout, "Alt_Layer_Value, Up_Separation, Down_Separation\n");
call    0 returned 100%
       30:  154:	fprintf(stdout, "Other_RAC, Other_Capability, Climb_Inhibit\n");
call    0 returned 100%
       30:  155:	exit(1);
call    0 returned 0%
        -:  156:    }
     1578:  157:    initialize();
call    0 returned 100%
     1578:  158:    Cur_Vertical_Sep = atoi(argv[1]);
call    0 returned 100%
     1578:  159:    High_Confidence = atoi(argv[2]);
call    0 returned 100%
     1578:  160:    Two_of_Three_Reports_Valid = atoi(argv[3]);
call    0 returned 100%
     1578:  161:    Own_Tracked_Alt = atoi(argv[4]);
call    0 returned 100%
     1578:  162:    Own_Tracked_Alt_Rate = atoi(argv[5]);
call    0 returned 100%
     1578:  163:    Other_Tracked_Alt = atoi(argv[6]);
call    0 returned 100%
     1578:  164:    Alt_Layer_Value = atoi(argv[7]);
call    0 returned 100%
     1578:  165:    Up_Separation = atoi(argv[8]);
call    0 returned 100%
     1578:  166:    Down_Separation = atoi(argv[9]);
call    0 returned 100%
     1578:  167:    Other_RAC = atoi(argv[10]);
call    0 returned 100%
     1578:  168:    Other_Capability = atoi(argv[11]);
call    0 returned 100%
     1578:  169:    Climb_Inhibit = atoi(argv[12]);
call    0 returned 100%
        -:  170:
     1578:  171:    fprintf(stdout, "%d\n", alt_sep_test());
call    0 returned 100%
call    1 returned 100%
     1578:  172:    exit(0);
        -:  173:}
